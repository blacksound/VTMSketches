/**** desc file generated by MIDIExplorer.

Please adapt this file as follows:

1. Put any general info and comments about the device here.

2. Add some minimal code examples for testing, such as:

k = MKtl('nk2', "korg-nanokontrol2");
k.elementAt(sl, 0).action = { yo.postln; };
k.elementAt(sl, 1).action = { 1.postcs; };

3. When there are only a few elements, one can keep them in a flat dictionary, and give them clear element names; see
'Reference/Naming_conventions_in_element_descriptions'.openHelpFile

4. When many elements of the same type are listed in an obvious order,
   such as 8 sliders sending cc numbers,
   or 88 piano keys sending noteOn and noteOff,
   it makes sense to organize them into Arrays.
'Reference/MKtl_description_files'.openHelpFile

Instructions will be continued when canonical format is been finalized.
More information can be found here:
'Tutorials/How_to_create_a_description_file'.openHelpFile;
'Tutorials/How_to_create_a_description_file_for_MIDI'.openHelpFile;


****/

(
deviceName: "Teensy MIDI", // gonna change
protocol: 'midi',
deviceType: 'mixer',
elementTypes: [\knob, \button],
status: (
	linux: "unknown",
	osx: "unknown",
	win: "unknown"),

idInfo: "Teensy MIDI", // gonna change in the microcontroller code

//hardwarePages: [1, 2, 3, 4],

 deviceInfo: (
 vendorURI: 'https://niklasadam.oddodd.org',
 //manualURI: 'https://',
	// description: ,
	 features: [
        "20 Knobs",
		"10 Buttons",
		"4 Pages"
    ],
	// notes: ,
    longName: "Magnificent Knob Twister" // is a longName needed ?
	// hasScribble: false
),
elementsDesc: (
    shared: ( 'midiChan': 0 ),
    elements: [
        (
            key: \kn,
            shared: ( 'midiMsgType': 'cc', 'elementType': 'knob', 'spec': 'midiCC' ),
            elements:
            4.collect{ arg i;
                (
                    elements: ((1..20)+(i*20)).collect{ arg item, i;
                        ( key: i, midiNum: item,
                            style: ( row: (i/5).floor, column: i%5, height: 1 )
                        )
                    };
                )
            }
        ),
        (

            key: \bt,
            shared: ( groupType: \noteOnOff, 'elementType': 'button', 'spec': 'midiBut' ),
            elements: (48..87).collect{ arg item, i;
                (
                    key: i,
                    shared: ( midiNum: item, mode: \push )
                )

            };

        )


        /*
        (
            key: \bt,
            shared: ( 'groupType': 'noteOnOff', 'elementType': 'button', 'spec': 'midiBut' ),
            elements:
            (48..87).collect{ arg item, i;

                (

                    key: i,

                    shared: ( midiNum: item, mode: \push )

                )

            4.collect{ arg i;
                (
                    elements: ( (48..57)+(i*10) ).collect{ arg item, i;
                        ( key: i, //midiNum: item,
                            style: ( row: (i/5).floor, column: i%5, height: 1 )
                            shared: ( midiNum: item, mode: \push, 'groupType': 'noteOnOff' )
                        )
                    };
                )
            }
        )*/  //not working but would be nice
	]
)
);